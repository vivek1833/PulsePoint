version: "3.8"

services:
  postgres:
    image: postgres:15-alpine
    container_name: pulsepoint_postgres
    environment:
      POSTGRES_DB: pulsepoint
      POSTGRES_USER: pulseuser
      POSTGRES_PASSWORD: pulsepass
    ports:
      - "5433:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - pulsepoint

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - pulsepoint

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_HOST://0.0.0.0:29092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - pulsepoint

  backend:
    image: vivek1833/pulsepoint-backend:latest
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: pulsepoint_backend
    environment:
      DB_URL: jdbc:postgresql://postgres:5432/pulsepoint
      DB_USERNAME: pulseuser
      DB_PASSWORD: pulsepass
      REDIS_HOST: redis
      REDIS_PORT: 6379
      MAIL_USERNAME: ${MAIL_USERNAME}
      MAIL_PASSWORD: ${MAIL_PASSWORD}
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      - kafka
    networks:
      - pulsepoint

  redis:
    image: redis:latest
    container_name: pulsepoint_redis
    ports:
      - "6379:6379"
    networks:
      - pulsepoint

  frontend:
    image: vivek1833/pulsepoint-frontend:latest
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: pulsepoint_frontend
    environment:
      - REACT_APP_API_URL=http://localhost:8080
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - pulsepoint

volumes:
  pgdata:

networks:
  pulsepoint:
    driver: bridge
